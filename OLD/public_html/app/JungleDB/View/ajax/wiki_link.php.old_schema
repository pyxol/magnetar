<?php
	// Link Wikipedia to Jungle content!
	global $db;
	
	$return = false;
	
	$content_table = false;
	
	if($return === false) {
		switch(strtolower(trim(@$_REQUEST['jungle_table']))) {
			case 'entertainment_movie':		$content_table = "entertainment_movie";		break;
			case 'person':					$content_table = "person";					break;
		}
		
		if(empty($content_table)) {
			$return = array(
				'status' => "error",
				'status_msg' => "Content type not found.",
			);
		}
	}
	
	$jungle_id = (!empty($_REQUEST['jungle_id'])?intval($_REQUEST['jungle_id']):false);
	$wiki_id = (!empty($_REQUEST['wiki_id'])?intval($_REQUEST['wiki_id']):false);
	
	if(empty($wiki_id) && (isset($_REQUEST['skip']) || isset($_REQUEST['query']))) {
		$wiki_id = ":unknown";
	}
	
	if($return === false && (empty($jungle_id) || empty($wiki_id))) {
		$return = array(
			'status' => "error",
			'status_msg' => "ID(s) are empty.",
		);
	}
	
	if($return === false) {
		
		if(!empty($_REQUEST['action'])) {
			if($_REQUEST['action'] === "is_child") {
				// setting as child
				
				$results = $db->get_results("
					INSERT INTO `". $db->escape($content_table) ."_meta`
					SET
						`". $db->escape($content_table) ."` = '". $db->escape($jungle_id) ."',
						`group` = 'external_id',
						`key` = 'wikipedia_child',
						`value` = '". $db->escape($wiki_id) ."'
				");
				
				$return = array(
					'status'		=> "success",
					'status_msg'	=> "Linked jungle_id to WikipediaID as child.",
				);
			} elseif($_REQUEST['action'] === "inline_search") {
				
				$cargo = array(
					'jungle_table' => $content_table,
					'jungle_id' => $jungle_id,
					'results' => array(),
				);
				
				require_once(DIR_BASE ."includes". DIRECTORY_SEPARATOR ."sphinx-2.0.5". DIRECTORY_SEPARATOR ."sphinxapi.php");
				
				// run Sphinx search
				$cl = new SphinxClient_205();
				
				$cl->setServer("localhost", "9312");
				
				$cl->setMatchMode(SPH_MATCH_ALL);
				$cl->setLimits(0, 5);
				
				$cl->setSortMode(SPH_SORT_EXTENDED, "title_length ASC, @weight DESC");
				$cl->setRankingMode(SPH_RANK_PROXIMITY_BM25);
				
				$query_clean = preg_replace(array("#^the #si", "# the$#si"), "", mkurl($_REQUEST['query'], " "));
				
				$sph_result = $cl->Query("\"". $query_clean ."\"", "index_wikipedia_cleaned");
				
				//print "<pre>". print_r($sph_result,1) ."</pre>\n";
				//print "getLastWarning = ". $cl->getLastWarning() ."<br />\n";
				//print "getLastError = ". $cl->getLastError() ."<br />\n";
				
				if(!empty($sph_result['matches'])) {
					$db->select_db("dump_wikipedia");
					$cargo['results'] = $db->get_results("SELECT `their_id`, `title` COLLATE utf8_general_ci as `title` FROM `external_wikipedia` WHERE `id` IN ('". implode("','", array_keys($sph_result['matches'])) ."') ORDER BY FIELD(`id`, '". implode("','", array_keys($sph_result['matches'])) ."')");
					$db->select_db(DB_NAME);
					//$results[$rkey]['results'] = $db->get_results("SELECT `their_id`, `title` COLLATE utf8_general_ci as `title` FROM `external_wikipedia` WHERE `id` IN ('". implode("','", array_keys($sph_result['matches'])) ."') ORDER BY `their_id`");
				}
				
				$return = array('status' => "success", 'cargo' => $cargo);
			}
		}
	}
	
	
	
	if($return === false) {
		$check = $db->get_var("
			SELECT `id`
			FROM `". $db->escape($content_table) ."_meta`
			WHERE
				`". $db->escape($content_table) ."` = '". $db->escape($jungle_id) ."',
				`group` = 'external_id',
				`key` = 'wikipedia'
		");
		
		if(!empty($check)) {
			$return = array(
				'status' => "error",
				'status_msg' => "Duplicate entry in meta table.",
			);
		}
	}
	
	if($return === false) {
		
		
		$results = $db->get_results("
			INSERT INTO `". $db->escape($content_table) ."_meta`
			SET
				`". $db->escape($content_table) ."` = '". $db->escape($jungle_id) ."',
				`group` = 'external_id',
				`key` = 'wikipedia',
				`value` = '". $db->escape($wiki_id) ."'
		");
		
		$return = array(
			'status'		=> "success",
			'status_msg'	=> "Linked jungle_id to WikipediaID.",
		);
	}
	
	print json_encode($return);
	
	die;